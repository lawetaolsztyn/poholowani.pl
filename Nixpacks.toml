# nixpacks.toml
# Jawnie informuje Nixpacks, że to jest aplikacja Node.js/React.
# W ten sposób ignoruje wykrycie Deno dla glownego serwisu.

# Definiuje fazy budowania
[phases.setup]
# Użyj Node.js i npm
nixPkgs = ["nodejs"]

[phases.build]
# Komendy budowania dla aplikacji Vite
commands = ["npm install", "npm run build"]

[phases.start]
# Komenda uruchomienia serwera produkcyjnego Vite
# Pamiętaj, że w vite.config.js musisz mieć preview.port: 8080 i host: true
commands = ["npm run start"] # Skrypt "start" z package.json, który uruchamia "npm run preview"

# Definiuje, na którym porcie aplikacja nasłuchuje
# To jest kluczowe, aby Railway mogło się połączyć
[start]
# Określ port, na którym aplikacja nasłuchuje (zgodnie z vite.config.js)
# Railway używa tej wartości do przekierowania ruchu
cmd = "npm run start" # Możesz też spróbować "npm run preview" bezpośrednio
# Upewnij się, że ten port jest zgodny z tym, co ustawiasz w vite.config.js (czyli 8080)
# I że zmienna PORT w Railway też jest ustawiona na 8080.